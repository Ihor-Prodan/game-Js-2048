{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["const WINNING_VALUE = 2048;\nconst GRID_SIZE = 4;\nconst CELL_SIZE = 75;\nconst CELL_GAP = 5;\n\nlet score = 0;\nconst scoreElement = document.getElementById('game-score');\nconst startMessage = document.getElementById('message-start');\nconst loseMessage = document.getElementById('message-lose');\nconst winMessage = document.getElementById('message-win');\n\nconst startButton = document.getElementById('button-start');\n\nconst gameBoard = document.getElementById('game-board');\n\nlet gameWon = false;\n\nclass Game {\n  constructor(gridElement) {\n    gridElement.style.setProperty('--grid-size', GRID_SIZE);\n    gridElement.style.setProperty('--cell-size', `${CELL_SIZE}px`);\n    gridElement.style.setProperty('--gap-size', `${CELL_GAP}px`);\n\n    this._cells = createCellElements(gridElement).map((cellElement, index) => {\n      return new Cell(\n        cellElement,\n        index % GRID_SIZE,\n        Math.floor(index / GRID_SIZE),\n      );\n    });\n  }\n\n  get cells() {\n    return this._cells;\n  }\n\n  get cellsByColumn() {\n    return this._cells.reduce((cellGrid, cell) => {\n      cellGrid[cell.x] = cellGrid[cell.x] || [];\n      cellGrid[cell.x][cell.y] = cell;\n\n      return cellGrid;\n    }, []);\n  }\n\n  get cellsByRow() {\n    return this._cells.reduce((cellGrid, cell) => {\n      cellGrid[cell.y] = cellGrid[cell.y] || [];\n      cellGrid[cell.y][cell.x] = cell;\n\n      return cellGrid;\n    }, []);\n  }\n\n  get _emptyCells() {\n    return this._cells.filter((cell) => cell.tile == null);\n  }\n\n  randomEmptyCell() {\n    const randomIndex = Math.floor(Math.random() * this._emptyCells.length);\n\n    return this._emptyCells[randomIndex];\n  }\n}\n\nclass Cell {\n  constructor(cellElement, x, y) {\n    this._cellElement = cellElement;\n    this._x = x;\n    this._y = y;\n  }\n\n  get x() {\n    return this._x;\n  }\n  get y() {\n    return this._y;\n  }\n\n  get tile() {\n    return this._tile;\n  }\n\n  set tile(value) {\n    this._tile = value;\n\n    if (value == null) {\n      return;\n    }\n\n    this._tile.x = this._x;\n    this._tile.y = this._y;\n  }\n\n  get mergeTile() {\n    return this._mergeTile;\n  }\n\n  set mergeTile(value) {\n    this._mergeTile = value;\n\n    if (value == null) {\n      return;\n    }\n\n    this._mergeTile.x = this._x;\n    this._mergeTile.y = this._y;\n  }\n\n  canAccept(tile) {\n    return (\n      this.tile == null ||\n      (this.mergeTile == null && this.tile.value === tile.value)\n    );\n  }\n\n  mergeTiles() {\n    if (this.tile == null || this.mergeTile == null) {\n      return;\n    }\n\n    score += this.tile.value;\n    this.tile.value = this.tile.value + this.mergeTile.value;\n\n    updateScore();\n\n    this.mergeTile.remove();\n    this.mergeTile = null;\n\n    if (this.tile.value === WINNING_VALUE) {\n      winGame();\n    }\n  }\n}\n\nfunction createCellElements(gridElement) {\n  const cells = [];\n\n  for (let i = 0; i < GRID_SIZE * GRID_SIZE; i++) {\n    const cell = document.createElement('div');\n\n    cell.classList.add('cell');\n    cells.push(cell);\n    gridElement.append(cell);\n  }\n\n  return cells;\n}\n\nclass Tile {\n  constructor(tileContainer, value = Math.random() > 0.1 ? 2 : 4) {\n    this._tileElement = document.createElement('div');\n    this._tileElement.classList.add('tile');\n    tileContainer.append(this._tileElement);\n    this.value = value;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set x(value) {\n    this._x = value;\n    this._tileElement.style.setProperty('--x', value);\n  }\n\n  set y(value) {\n    this._y = value;\n    this._tileElement.style.setProperty('--y', value);\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  set value(v) {\n    this._value = v;\n    this._tileElement.textContent = v;\n    this._tileElement.classList.add(`tile--${this._value}`);\n  }\n\n  remove() {\n    this._tileElement.remove();\n  }\n\n  waitForTransition(animation = false) {\n    return new Promise((resolve) => {\n      this._tileElement.addEventListener(\n        animation ? 'animationend' : 'transitionend',\n        resolve,\n        { once: true },\n      );\n    });\n  }\n}\n\nstartButton.addEventListener('click', startGame);\n\nconst grid = new Game(gameBoard);\n\nfunction setupInput() {\n  window.addEventListener('keydown', handleInput, { once: true });\n}\n\nasync function handleInput(e) {\n  if (gameWon) {\n    return;\n  }\n\n  let moveFunction;\n\n  switch (e.key) {\n    case 'ArrowUp':\n      moveFunction = moveUp;\n      break;\n    case 'ArrowDown':\n      moveFunction = moveDown;\n      break;\n    case 'ArrowLeft':\n      moveFunction = moveLeft;\n      break;\n    case 'ArrowRight':\n      moveFunction = moveRight;\n      break;\n    default:\n      moveFunction = null;\n  }\n\n  if (moveFunction) {\n    if (!moveFunction()) {\n      setupInput();\n\n      return;\n    }\n    await moveFunction();\n  } else {\n    setupInput();\n\n    return;\n  }\n\n  grid.cells.forEach((cell) => cell.mergeTiles());\n\n  if (grid._emptyCells.length) {\n    const newTile = new Tile(gameBoard);\n\n    grid.randomEmptyCell().tile = newTile;\n\n    if (!canMoveUp() && !canMoveDown() && !canMoveLeft() && !canMoveRight()) {\n      newTile.waitForTransition(true).then(() => loseGame());\n\n      return;\n    }\n  }\n\n  setupInput();\n}\n\nfunction moveUp() {\n  return slideTiles(grid.cellsByColumn);\n}\n\nfunction moveDown() {\n  return slideTiles(grid.cellsByColumn.map((column) => [...column].reverse()));\n}\n\nfunction moveLeft() {\n  return slideTiles(grid.cellsByRow);\n}\n\nfunction moveRight() {\n  return slideTiles(grid.cellsByRow.map((row) => [...row].reverse()));\n}\n\nfunction slideTiles(cells) {\n  return Promise.all(\n    cells.flatMap((group) => {\n      const promises = [];\n\n      for (let i = 0; i < group.length; i++) {\n        const cell = group[i];\n\n        if (cell.tile == null) {\n          continue;\n        }\n\n        let lastValidCell;\n\n        for (let j = i - 1; j >= 0; j--) {\n          const moveToCell = group[j];\n\n          if (!moveToCell.canAccept(cell.tile)) {\n            break;\n          }\n\n          lastValidCell = moveToCell;\n        }\n\n        if (lastValidCell != null) {\n          promises.push(cell.tile.waitForTransition());\n\n          if (lastValidCell.tile != null) {\n            lastValidCell.mergeTile = cell.tile;\n          } else {\n            lastValidCell.tile = cell.tile;\n          }\n          cell.tile = null;\n        }\n      }\n\n      return promises;\n    }),\n  );\n}\n\nfunction canMoveUp() {\n  return canMove(grid.cellsByColumn);\n}\n\nfunction canMoveDown() {\n  return canMove(grid.cellsByColumn.map((column) => [...column].reverse()));\n}\n\nfunction canMoveLeft() {\n  return canMove(grid.cellsByRow);\n}\n\nfunction canMoveRight() {\n  return canMove(grid.cellsByRow.map((row) => [...row].reverse()));\n}\n\nfunction canMove(cells) {\n  return cells.some((group) => {\n    return group.some((cell, index) => {\n      if (index === 0) {\n        return false;\n      }\n\n      if (cell.tile == null) {\n        return false;\n      }\n\n      const moveToCell = group[index - 1];\n\n      return moveToCell.canAccept(cell.tile);\n    });\n  });\n}\n\nfunction updateScore() {\n  scoreElement.textContent = score;\n}\n\nfunction resetGame() {\n  score = 0;\n\n  updateScore();\n\n  setupInput();\n}\n\nfunction clearBoard() {\n  grid.cells.forEach((cell) => {\n    if (cell.tile != null) {\n      cell.tile.remove();\n      cell.tile = null;\n    }\n  });\n}\n\nfunction startGame() {\n  resetGame();\n\n  startButton.classList.remove('button--start');\n  startButton.classList.add('button--restart');\n  startButton.textContent = '↻';\n\n  loseMessage.classList.add('message--hidden');\n  startMessage.classList.add('message--hidden');\n  winMessage.classList.add('message--hidden');\n\n  clearBoard();\n\n  grid.randomEmptyCell().tile = new Tile(gameBoard);\n  grid.randomEmptyCell().tile = new Tile(gameBoard);\n  gameWon = false;\n  setupInput();\n}\n\nfunction winGame() {\n  winMessage.classList.remove('message--hidden');\n\n  startButton.classList.remove('button--restart');\n  startButton.textContent = 'Start';\n\n  startButton.classList.add('button--start');\n\n  window.removeEventListener('keydown', handleInput);\n  gameWon = true;\n}\n\nfunction loseGame() {\n  loseMessage.classList.remove('message--hidden');\n  startButton.textContent = 'Restart';\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}